[{"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\index.js":"1","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\App.js":"2","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\Router\\AllRoutes.jsx":"4","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Footer.jsx":"5","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Navbar.jsx":"6","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\Router\\ProtectedRoute.jsx":"7","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Profile.jsx":"8","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\NotFound.jsx":"9","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Home.jsx":"10","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\LogIn.jsx":"11","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\OrderDetails.jsx":"12","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Payment.jsx":"13","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Product.jsx":"14","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\PaymentForm.jsx":"15","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Cart.jsx":"16","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\SingleProduct.jsx":"17","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Registration.jsx":"18","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\ShippingDetails.jsx":"19","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\AdminLogIn.jsx":"20","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Admin.jsx":"21","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Address.jsx":"22","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\Router\\api.jsx":"23","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\UpdateAddress.jsx":"24","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Slider.jsx":"25","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AdminUserDetails.jsx":"26","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AllProductAdmin.jsx":"27","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AllOrderAdmin.jsx":"28","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AddProduct.jsx":"29","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\UpdateProductForm.jsx":"30"},{"size":597,"mtime":1745255656848,"results":"31","hashOfConfig":"32"},{"size":606,"mtime":1745255656817,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1745255656864,"results":"34","hashOfConfig":"32"},{"size":1988,"mtime":1745255656817,"results":"35","hashOfConfig":"32"},{"size":2059,"mtime":1745255656848,"results":"36","hashOfConfig":"32"},{"size":2746,"mtime":1745255656848,"results":"37","hashOfConfig":"32"},{"size":566,"mtime":1745255656817,"results":"38","hashOfConfig":"32"},{"size":6101,"mtime":1745255656848,"results":"39","hashOfConfig":"32"},{"size":275,"mtime":1745255656848,"results":"40","hashOfConfig":"32"},{"size":2565,"mtime":1745255656848,"results":"41","hashOfConfig":"32"},{"size":3370,"mtime":1745255656848,"results":"42","hashOfConfig":"32"},{"size":4599,"mtime":1745255656848,"results":"43","hashOfConfig":"32"},{"size":2234,"mtime":1745255656848,"results":"44","hashOfConfig":"32"},{"size":5536,"mtime":1745255656848,"results":"45","hashOfConfig":"32"},{"size":2733,"mtime":1745255656848,"results":"46","hashOfConfig":"32"},{"size":5261,"mtime":1745255656848,"results":"47","hashOfConfig":"32"},{"size":2225,"mtime":1745255656864,"results":"48","hashOfConfig":"32"},{"size":3308,"mtime":1745255656848,"results":"49","hashOfConfig":"32"},{"size":2218,"mtime":1745255656848,"results":"50","hashOfConfig":"32"},{"size":2848,"mtime":1745255656848,"results":"51","hashOfConfig":"32"},{"size":2191,"mtime":1745255656848,"results":"52","hashOfConfig":"32"},{"size":2958,"mtime":1745255656833,"results":"53","hashOfConfig":"32"},{"size":395,"mtime":1745255656817,"results":"54","hashOfConfig":"32"},{"size":3037,"mtime":1745255656848,"results":"55","hashOfConfig":"32"},{"size":612,"mtime":1745255656848,"results":"56","hashOfConfig":"32"},{"size":2309,"mtime":1745255656833,"results":"57","hashOfConfig":"32"},{"size":3994,"mtime":1745255656848,"results":"58","hashOfConfig":"32"},{"size":2552,"mtime":1745255656848,"results":"59","hashOfConfig":"32"},{"size":3430,"mtime":1745255656833,"results":"60","hashOfConfig":"32"},{"size":2401,"mtime":1745255656848,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tn3ui8",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\index.js",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\App.js",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\Router\\AllRoutes.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\Router\\ProtectedRoute.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Profile.jsx",["165","166","167","168"],[],"import React, { useState, useEffect } from \"react\";\r\nimport api from \"../Router/api\";\r\nimport \"../comp_css/Profile.css\";\r\nimport Address from \"../components/Address\";\r\nimport UpdateAddress from \"../components/UpdateAddress\";\r\n\r\nconst userid = localStorage.getItem(\"userid\");\r\nconst passData={\r\n  newpass:\"\"\r\n}\r\n\r\n\r\n\r\nconst Profile = () => {\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [add, setAdd] = useState(null);\r\n  const [addressModal, setAddressModal] = useState(false);\r\n  const [updateaddressModal, setUpdateAddressModal] = useState(false);\r\n  const [showPassSection, setShowPassSection] = useState(false);\r\n  const [passform, setNewPassword1] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const val = e.target.value;\r\n    setNewPassword1({ ...passform, [e.target.name]: val });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    api\r\n      .put(`/ecom/customers/update-password/${userid}`, passform)\r\n      .then((response) => {\r\n        alert(\"Password updated successfully\");\r\n        setShowPassSection(false);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error occures Try letter....\")\r\n      });\r\n  };\r\n  const changePassword = () => {\r\n    setShowPassSection(true);\r\n  };\r\n\r\n  const handlerUpdateAddress = (latestAddress) => {\r\n    setAdd(latestAddress);\r\n    setUpdateAddressModal(true);\r\n  };\r\n\r\n  const showUpdateAddAddressModal = () => {\r\n    setUpdateAddressModal(false);\r\n  };\r\n  const showAddAddressModal = () => {\r\n    setAddressModal(false);\r\n  };\r\n  const handlerAddAddress = (userid) => {\r\n    setAddressModal(true);\r\n    console.log(\"called...... show\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`/ecom/customers/${userid}`)\r\n      .then((response) => {\r\n        setProfileData(response.data);\r\n        setAddressModal(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  }, [userid]);\r\n\r\n\r\n  const {newpass}=passform;\r\n  const latestAddress = profileData?.address?.length\r\n    ? profileData.address[profileData.address.length - 1]\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      <h2\r\n        style={{\r\n          color: \"green\",\r\n          textAlign: \"center\",\r\n          margin: \"20px\",\r\n        }}\r\n      >\r\n        Profile Section\r\n      </h2>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"flex-start\",\r\n        }}\r\n      >\r\n        <div className=\"profile-container\">\r\n          {addressModal && <Address onclose={showAddAddressModal} />}\r\n          {updateaddressModal && (\r\n            <UpdateAddress address={add} onclose={showAddAddressModal} />\r\n          )}\r\n\r\n          <div className=\"profile-details\">\r\n            <h1 className=\"profile-header\">Profile Details</h1>\r\n\r\n            {profileData ? (\r\n              <>\r\n                <p style={{ color: \"green\" }}>\r\n                  <strong>Account Status:</strong>{\" \"}\r\n                  {profileData.userAccountStatus}\r\n                </p>\r\n                <p>\r\n                  <strong>Name:</strong> {profileData.firstName}{\" \"}\r\n                  {profileData.lastName}\r\n                </p>\r\n                <p>\r\n                  <strong>Email:</strong> {profileData.email}\r\n                </p>\r\n\r\n                <p>\r\n                  <strong>Phone Number:</strong> {profileData.phoneNumber}\r\n                </p>\r\n                <p>\r\n                  <strong>Registration :</strong>{\" \"}\r\n                  {profileData.registerTime.substring(0, 10)}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <p>Loading profile data...</p>\r\n            )}\r\n          </div>\r\n          <div className=\"latest-address\">\r\n            {latestAddress ? (\r\n              <>\r\n                <h2 className=\"latest-address-header\">Latest Address</h2>\r\n                <p>\r\n                  <strong>Buiding :</strong> {latestAddress.flatNo}\r\n                </p>\r\n                <p>\r\n                  <strong>Street:</strong> {latestAddress.street}\r\n                </p>\r\n                <p>\r\n                  <strong>City:</strong> {latestAddress.city}\r\n                </p>\r\n                <p>\r\n                  <strong>State:</strong> {latestAddress.state}\r\n                </p>\r\n                <p>\r\n                  <strong>Zip Code:</strong> {latestAddress.zipCode}\r\n                </p>\r\n\r\n                <button\r\n                  onClick={() => {\r\n                    handlerUpdateAddress(latestAddress);\r\n                  }}\r\n                >\r\n                  Update Address\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h2>Address Not updated</h2>\r\n                <button\r\n                  onClick={() => {\r\n                    handlerAddAddress();\r\n                  }}\r\n                >\r\n                  Add Address\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"updatePassword\">\r\n          {showPassSection ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"newPassword\">New Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                value={newpass}\r\n                onChange={handleChange}\r\n              />\r\n              {error && <p className=\"error\">{error}</p>}\r\n              <button type=\"submit\">Update Password</button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowPassSection(false);\r\n                }}\r\n              >\r\n                Cancel update\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                changePassword();\r\n              }}\r\n            >\r\n              ChangePassword\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\NotFound.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Home.jsx",["169","170"],[],"import React,{useEffect} from \"react\";\r\nimport Slider from \"../components/Slider\";\r\n\r\nimport \"../comp_css/Slider.css\"\r\nimport Atta from \"../picture/Atta_and_dals.avif\";\r\nimport Beauty from \"../picture/Beauty_and_personal_care.avif\";\r\nimport Cleaning from \"../picture/Cleaning_essentials.avif\";\r\nimport Home_essentials from \"../picture/Home_essentials.avif\";\r\nimport kids_fashion from \"../picture/kids_fashion.avif\";\r\nimport Kitchen_must_haves from \"../picture/Kitchen_must_haves.avif\";\r\nimport Laptops_and_Tablets from \"../picture/Laptops_and_Tablets.avif\";\r\nimport men_fashion from \"../picture/men_fashion.avif\";\r\nimport Oil_and_ghee from \"../picture/Oil_and_ghee.avif\";\r\nimport Smart_Televisions from \"../picture/Smart_Televisions.avif\";\r\n\r\n\r\nconst Home = () => {\r\n  const veritycard = [\r\n    Atta,\r\n    Beauty,\r\n    Cleaning,\r\n    Home_essentials,\r\n    kids_fashion,\r\n    Kitchen_must_haves,\r\n    Laptops_and_Tablets,\r\n    men_fashion,\r\n    Oil_and_ghee,\r\n    Smart_Televisions,\r\n  ];\r\n  const slideImages = [\r\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691935239_Freedom_Finds.jpg?im=Resize=(1680,320)\",\r\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691950461_Handloom_Sarees_in_Colors_of_India.jpg?im=Resize=(1680,320)\",\r\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691612739_Aaj_Ki_Deals_Desktop.jpg?im=Resize=(1680,320)\",\r\n  ];\r\n  const slideImages2 = [\r\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691773740_Paytm_Wallet_1240x209.jpg?im=Resize=(1241,195)\",\r\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691435554_MobiKwik_1240x209.jpg?im=Resize=(1241,195)\",\r\n  ];\r\n  const styleFixedImg = {\r\n    width: \"100%\",\r\n    height: \"25vh\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  };\r\n  useEffect(() => {\r\n    document.title = 'Ecommerse | Home Page';\r\n    return () => { \r\n      document.title = 'Ecommerse App';\r\n    };\r\n  }, []); \r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Slider images={slideImages} interval={4000} />\r\n      </div>\r\n      <div className=\"ImageFixed\">\r\n        <img\r\n          style={styleFixedImg}\r\n          src=\"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691749079_Aaj_Ki_Deals.jpg?im=Resize=(1240,150)\"\r\n          alt=\"Image\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <Slider images={slideImages2} interval={5000} />\r\n      </div>\r\n      <div className=\"cardbox\">\r\n        {veritycard.map((el, index) => (\r\n          <img src={el} alt={`image${index}`} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\LogIn.jsx",["171"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"../comp_css/Login.css\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport loginbg from \"../picture/loginbg1.webp\";\r\n\r\nconst bg = {\r\n  backgroundImage: `url(${loginbg})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundPosition: \"center center\",\r\n  border: \"1px solid grey\",\r\n  height: \"100vh\",\r\n};\r\n\r\nconst formData = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState(formData);\r\n  \r\n  useEffect(() => {\r\n    document.title = 'Ecommerse | LogIn';\r\n    return () => { \r\n      document.title = 'Ecommerse App';\r\n    };\r\n  }, []); \r\n\r\n\r\n  const setHandlerChange = (e) => {\r\n    const val = e.target.value;\r\n    setForm({ ...form, [e.target.name]: val });\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const authHeader = `Basic ${btoa(`${form.username}:${form.password}`)}`;\r\n      const response = await axios.get(\"http://localhost:8080/ecom/signIn\", {\r\n        headers: {\r\n          Authorization: authHeader,\r\n        },\r\n      });\r\n      //console.log(response.data);\r\n      if (response.headers.authorization != undefined) {\r\n        localStorage.setItem(\"jwtToken\", response.headers.authorization);\r\n        localStorage.setItem(\"name\", response.data.firstNAme || \"LogIn\");\r\n        localStorage.setItem(\"userid\", response.data.id);\r\n        alert(\"Login successfully\");\r\n        navigate(\"/\");\r\n      } else {\r\n        alert(\"Invalid Credential\");\r\n        console.error(\"JWT retrieval failed\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        alert(\"Invalid credentials. Please try again.\");\r\n      } else {\r\n        alert(\"Error during login. Please try again later.\");\r\n        console.error(\"Error during login:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { username, password } = form;\r\n\r\n  return (\r\n    <>\r\n    <div style={bg}>\r\n      <h2 style={{ textAlign: \"center\", color: \"White\", margin: \"20px\" }}>\r\n       WELCOME TO USER LOGIN PAGE\r\n      </h2>\r\n      <div className=\"loginConatiner\" >\r\n        <div className=\"login-form\">\r\n          <h2 style={{ textAlign: \"center\" }}>LogIn </h2>\r\n          <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username:</label>\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={setHandlerChange}\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={setHandlerChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Login\" />\r\n              <p>\r\n                Don't have an account?{\" \"}\r\n                <Link to=\"/register-user\">Register here</Link>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\OrderDetails.jsx",["172","173"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useNavigation } from \"react-router-dom\";\r\nimport Profile from \"../components/Profile\";\r\nimport api from \"../Router/api\";\r\n\r\nimport \"../comp_css/order.css\";\r\n\r\nconst OrderDetails = () => {\r\n  const navigate = useNavigate();\r\n  const userId = localStorage.getItem(\"userid\");\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [allOrder, setAllOrder] = useState([]);\r\n\r\n  const handeldemakePayment = (orderid) => {\r\n    localStorage.setItem(\"orderid\", orderid);\r\n    navigate(\"/user/make-payment\");\r\n  };\r\n\r\n  const handleProfileSection = (userid) => {\r\n    navigate(`/user/profile/${userid}`);\r\n  };\r\n \r\n  const handeldeleteOrder = (orderId) => {\r\n    axios\r\n      .delete(`http://127.0.0.1:8080/ecom/orders/users/${userId}/${orderId}`)\r\n      .then((response) => {\r\n        alert(response.data);\r\n\r\n        const updatedAllOrder = allOrder.filter(\r\n          (order) => order.orderId !== orderId\r\n        );\r\n        setAllOrder(updatedAllOrder);\r\n        setDeleted(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Ecommerse | Order details\";\r\n    api\r\n      .get(`/ecom/orders/orders/${userId}`)\r\n      .then((response) => {\r\n        const sortedOrders = response.data.sort((a, b) => {\r\n          return new Date(b.orderDate) - new Date(a.orderDate);\r\n        });\r\n        setAllOrder(sortedOrders);\r\n        setDeleted(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  }, [deleted, userId]);\r\n\r\n \r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"orderContainer\">\r\n       { allOrder.length > 0 ? (\r\n              allOrder.map((order, index) => (\r\n                <div key={index} className=\"order\">\r\n                  <div className=\"odr1\">\r\n                    <h3>Order Number : {index + 1}</h3>\r\n                    <p>Order ID: {order.orderId}</p>\r\n                    <p>Status: {order.status}</p>\r\n                    <p>\r\n                      Order Date: {new Date(order.orderDate).toLocaleString()}\r\n                    </p>\r\n                    <h3 style={{ color: \"green\" }}>\r\n                      Total Amount: ${order.totalAmount}\r\n                    </h3>\r\n\r\n                    {order.status === \"SHIPPED\" ? (\r\n                      <button style={{ backgroundColor: \"green\" }} disabled>\r\n                        View\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        style={{ backgroundColor: \"red\" }}\r\n                        onClick={() => {\r\n                          handeldeleteOrder(order.orderId);\r\n                        }}\r\n                      >\r\n                        Cancel Order\r\n                      </button>\r\n                    )}\r\n\r\n                    {order.status === \"SHIPPED\" ? (\r\n                      <button style={{ backgroundColor: \"green\" }} disabled>\r\n                        SHIPPED\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => {\r\n                          handeldemakePayment(order.orderId);\r\n                        }}\r\n                      >\r\n                        Make Payment\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"odr2\">\r\n                    <h3>Order Items</h3>\r\n                    {order.orderItem.map((item) => (\r\n                      <li key={item.orderItemId}>\r\n                        {item.product.name} - Quantity: {item.quantity}\r\n                      </li>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  color: \"green\",\r\n                  fontSize: \"20px\",\r\n                  border: \"2px solid grey\",\r\n                  height: \"50vh\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <h1 style={{ marginTop: \"50px\" }}>No items present</h1>\r\n              </div>\r\n            )}\r\n        </div>\r\n        <div className=\"box\">\r\n          <h3>Order History</h3>\r\n          <button onClick={() => handleProfileSection(userId)}>\r\n            View Profile\r\n          </button>\r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Payment.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Product.jsx",["174"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../comp_css/Product.css\";\r\nimport api from \"../Router/api\";\r\n\r\nconst Product = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  const [priceOrder, setPriceOrder] = useState(\"All\");\r\n  const [nameSearch, setNameSearch] = useState(\"\");\r\n  let userid = localStorage.getItem(\"userid\");\r\n\r\n  const filterProducts = (category, priceOrder, nameSearch, data) => {\r\n    let filteredProducts = data;\r\n\r\n    if (category !== \"All\") {\r\n      filteredProducts = filteredProducts.filter(\r\n        (product) => product.category === category\r\n      );\r\n    }\r\n    \r\n    if (priceOrder === \"LowToHigh\") {\r\n      filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\r\n    } else if (priceOrder === \"HighToLow\") {\r\n      filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\r\n    }\r\n\r\n    if (nameSearch !== \"\") {\r\n      const searchQuery = nameSearch.toLowerCase();\r\n      filteredProducts = filteredProducts.filter((product) =>\r\n        product.name.toLowerCase().includes(searchQuery)\r\n      );\r\n    }\r\n\r\n    setFilteredProducts(filteredProducts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://127.0.0.1:8080/ecom/products/all\")\r\n      .then((response) => {\r\n        setProducts(response.data);\r\n        filterProducts(selectedCategory, priceOrder, nameSearch, response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  }, [selectedCategory, priceOrder, nameSearch]);\r\n\r\n  const addProductToCart = (productid) => {\r\n    api\r\n      .post(`/ecom/cart/add-product?userId=${userid}&productId=${productid}`)\r\n      .then((response) => {\r\n        localStorage.setItem(\"cartid\", response.data.cartId);\r\n        alert(\"product added to Cart\");\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.data) {\r\n          alert(error.response.data.message);\r\n        } else {\r\n          alert(\"Error To adding Product . Please try again later.\");\r\n          console.error(\"Error registering:\", error);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-page\">\r\n      <div className=\"filter-section\">\r\n        <h2>Filter</h2>\r\n        <hr />\r\n        <label>Category</label>\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={(e) => {\r\n            setSelectedCategory(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"vegetables\">Vegetable</option>\r\n          <option value=\"fruits\">Fruits</option>\r\n          <option value=\"electronics\">Electronic</option>\r\n          <option value=\"gadgets\">Gaggets</option>\r\n        </select>\r\n        <br />\r\n        <label>Price:</label>\r\n        <div>\r\n          <select\r\n            value={priceOrder}\r\n            onChange={(e) => {\r\n              setPriceOrder(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"All\">All</option>\r\n            <option value=\"LowToHigh\">Low to High</option>\r\n            <option value=\"HighToLow\">High To Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        <br />\r\n        <div>\r\n          <h4>By Name</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by name\"\r\n            value={nameSearch}\r\n            onChange={(e) => setNameSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"product-list\">\r\n        {filteredProducts.length === 0 ? (\r\n          <h1\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"50px\",\r\n              color: \"green\",\r\n              width: \"800px\",\r\n            }}\r\n          >\r\n            Product Not found ....\r\n          </h1>\r\n        ) : (\r\n          filteredProducts.map((product) => (\r\n            <div className=\"product-card\" key={product.productId}>\r\n              <div className=\"product-image1\">\r\n                <img src={product.imageUrl} alt={product.name} />\r\n              </div>\r\n              <div className=\"product-info\">\r\n                <h2>{product.name}</h2>\r\n                <p>\r\n                  <strong>Category :</strong> {product.category}\r\n                </p>\r\n                <p>\r\n                  <strong>Description: </strong>\r\n                  {product.description.substring(0, 25)}\r\n                </p>\r\n                <h2 className=\"product-price\">Price: ₹ {product.price}</h2>\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>Rating :</strong>\r\n                  {product.reviews.length === 0\r\n                    ? \"Not Available\"\r\n                    : product.reviews[0].rating}\r\n                </p>\r\n\r\n                <div>\r\n                  <button onClick={() => addProductToCart(product.productId)}>\r\n                    Add to Cart\r\n                  </button>\r\n                  <button>\r\n                    <Link\r\n                      to={`/product/${product.productId}`}\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      View\r\n                    </Link>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\PaymentForm.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Cart.jsx",["175"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport api from \"../Router/api\";\r\nimport \"../comp_css/Cart.css\";\r\n\r\nconst Cart = () => {\r\n  const navigate = useNavigate();\r\n  const [cartData, setCartData] = useState({});\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  let cartId = localStorage.getItem(\"cartid\");\r\n  let userId = localStorage.getItem(\"userid\");\r\n\r\n  const apiCallOrderPlaced = () => {\r\n    api\r\n      .post(`/ecom/orders/placed/${userId}`)\r\n      .then((response) => {\r\n        alert(\"Order Placed Succesfuly.....\");\r\n        navigate(\"/user/order-details\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  };\r\n\r\n  const orderPlaced = () => {\r\n    apiCallOrderPlaced();\r\n    \r\n  };\r\n  const fetchCartData = () => {\r\n    api\r\n      .get(`/ecom/cart/products/${cartId}`)\r\n      .then((response) => {\r\n        setCartData(response.data);\r\n        setTotalAmount(response.data.totalAmount);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Ecommerse | Cart\";\r\n    fetchCartData();\r\n  }, [cartId, totalAmount]);\r\n  const emptyCart = () => {\r\n    api\r\n      .delete(`/ecom/cart/empty-Cart/${cartId}`)\r\n      .then((response) => {\r\n        setTotalAmount(response.data.toalAmout);\r\n        alert(\"All cart Item remove\");\r\n        fetchCartData();\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Cart is empty\");\r\n      });\r\n  };\r\n\r\n  const removeProductfromCart = (productid) => {\r\n    api\r\n      .delete(`/ecom/cart/remove-product/${cartId}/${productid}`)\r\n      .then((response) => {\r\n        alert(\"Product removed from cart\");\r\n        fetchCartData();\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Cart is empty\");\r\n      });\r\n  };\r\n\r\n  const increaseCount = (productid) => {\r\n    api\r\n      .put(`/ecom/cart/increase-productQty/${cartId}/${productid}`)\r\n      .then((response) => {\r\n        setTotalAmount(response.data.totalAmount);\r\n        fetchCartData();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const decreaseCount = (productid) => {\r\n    api\r\n      .put(`ecom/cart/decrease-productQty/${cartId}/${productid}`)\r\n      .then((response) => {\r\n        setTotalAmount(response.data.totalAmount);\r\n        fetchCartData();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"Product can be further decrese....\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-page\">\r\n      {cartData.cartItems?.length > 0 ? (\r\n        <div className=\"cart-list\">\r\n          {cartData.cartItems.map((item) => (\r\n            <div className=\"cart-card\" key={item.cartItemId}>\r\n              <div className=\"cartproduct-image1\">\r\n                <img src={item.product.imageUrl} alt={item.product.name} />\r\n              </div>\r\n              <div className=\"cartproduct-info\">\r\n                <h2>{item.product.name}</h2>\r\n                <p>Category: {item.product.category}</p>\r\n                <p>Description: {item.product.description}</p>\r\n                <h2 className=\"cartproduct-price\">\r\n                  Price: ₹ {item.product.price}\r\n                </h2>\r\n                <div className=\"increaseBtn\">\r\n                  <button onClick={() => increaseCount(item.product.productId)}>\r\n                    +\r\n                  </button>\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"25px\",\r\n                      color: \"red\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {item.quantity}\r\n                  </span>\r\n                  <button onClick={() => decreaseCount(item.product.productId)}>\r\n                    -\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    onClick={() =>\r\n                      removeProductfromCart(item.product.productId)\r\n                    }\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"empty-cart-message\">\r\n          <h1>\r\n            Your cart is empty. <Link to=\"/\">Shop Now</Link>\r\n          </h1>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"cart-details\">\r\n        <h2>Total Cart Amount: </h2>\r\n        <h2>${\"   \" + totalAmount}</h2>\r\n        <div className=\"counter-box\">\r\n          <div>\r\n            <button onClick={orderPlaced}>Order Placed</button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={() => emptyCart(cartId)}\r\n              style={{ backgroundColor: \"red\" }}\r\n            >\r\n              Empty Cart\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                navigate(\"/user/order-details\");\r\n              }}\r\n            >\r\n              Order Page\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\SingleProduct.jsx",["176"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport api from '../Router/api'\r\nimport \"../comp_css/SingleProduct.css\";\r\nimport axios from \"axios\";\r\n\r\nconst SingleProduct = () => {\r\n  const navigate = useNavigate();\r\n  const { productId } = useParams();\r\n  const [product, setProduct] = useState({});\r\n  const userid = localStorage.getItem(\"userid\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://127.0.0.1:8080/ecom/products/${productId}`)\r\n      .then((response) => {\r\n        setProduct(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  }, [productId]);\r\n\r\n  const addProductToCart = (productid) => {\r\n    api\r\n      .post(\r\n        `/ecom/cart/add-product?userId=${userid}&productId=${productid}`\r\n      )\r\n      .then((response) => {\r\n        localStorage.setItem(\"cartid\", response.data.cartId);\r\n        alert(\"Product added to Cart.....\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Product Alredy in cart......\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n    <h1 style={{color:\"green\",textAlign:\"center\",margin:\"20px\"}}>Single Product </h1>\r\n    <div className=\"product-container\">\r\n     \r\n      <div className=\"product-details\">\r\n        <div className=\"product_image\">\r\n          <img src={product.imageUrl} alt={product.name} />\r\n        </div>\r\n\r\n        <div className=\"product_details\">\r\n          <h2>{product.name}</h2>\r\n          <p>Category: {product.category}</p>\r\n          <p>Description: {product.description}</p>\r\n          <p>Price: ₹ {product.price}</p>\r\n\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                addProductToCart(product.productId);\r\n              }}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"counter-box\">\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              navigate(\"/user/cart\");\r\n            }}\r\n          >\r\n            Move To Cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleProduct;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Registration.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\ShippingDetails.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\AdminLogIn.jsx",["177","178"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"../comp_css/Login.css\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst formData = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\nconst AdminLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState(formData);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Ecommerse | Admin LogIn\";\r\n    return () => {\r\n      document.title = \"Ecommerse App\";\r\n    };\r\n  }, []);\r\n  const setHandlerChange = (e) => {\r\n    const val = e.target.value;\r\n    setForm({ ...form, [e.target.name]: val });\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const authHeader = `Basic ${btoa(`${form.username}:${form.password}`)}`;\r\n      const response = await axios.get(\"http://localhost:8080/ecom/signIn\", {\r\n        headers: {\r\n          Authorization: authHeader,\r\n        },\r\n      });\r\n\r\n      if (response.headers.authorization != undefined) {\r\n        localStorage.setItem(\"jwtToken\", response.headers.authorization);\r\n        localStorage.setItem(\"adminid\", response.data.id);\r\n        alert(\"Admin Login successfully\");\r\n        navigate(\"/admin/admin\");\r\n      } else {\r\n        alert(\"Invalid Credential\");\r\n        console.error(\"JWT retrieval failed\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        alert(\"Invalid credentials. Please try again.\");\r\n      } else {\r\n        alert(\"Error during login. Please try again later.\");\r\n        console.error(\"Error during login:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { username, password } = form;\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: \"center\", color: \"White\", margin: \"10px\" }}>\r\n        WELCOME TO ADMIN LOGIN PAGE\r\n      </h2>\r\n\r\n      <div className=\"loginConatiner\">\r\n        <div className=\"login-form\">\r\n          <h2 style={{ textAlign: \"center\" }}>Admin LogIn </h2>\r\n          <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username:</label>\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={setHandlerChange}\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={setHandlerChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\pages\\Admin.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Address.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\Router\\api.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\UpdateAddress.jsx",[],[],"C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\Slider.jsx",["179"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"../comp_css/Slider.css\"; //\r\n\r\nconst Slider = ({ images, interval }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    const slideInterval = setInterval(() => {\r\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n    }, interval);\r\n\r\n  }, [images, interval]);\r\n  \r\n  return (\r\n    <div className=\"slider\">\r\n      <img\r\n        key={currentIndex}\r\n        src={images[currentIndex]}\r\n        alt={`Slide ${currentIndex}`}\r\n       \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AdminUserDetails.jsx",["180"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../comp_css/AdminUserDetails.css'; \r\nimport api from '../Router/api';\r\n\r\nfunction AdminUserDetails() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get('/ecom/customers/get-all-customer')\r\n      .then((response) => {\r\n        // Sort addresses for each user by timestamp in descending order\r\n        const sortedUsers = response.data.map((user) => ({\r\n          ...user,\r\n          address: user.address.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)),\r\n        }));\r\n        setUsers(sortedUsers);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Function to get the latest address for a user\r\n  const getLatestAddress = (user) => {\r\n    const addresses = user.address;\r\n    if (addresses && addresses.length > 0) {\r\n      const latestAddress = addresses[0];\r\n      return (\r\n        <div>\r\n          <h3>Latest Address</h3>\r\n          <p>Flat No: {latestAddress.flatNo}</p>\r\n          <p>Street: {latestAddress.street}</p>\r\n          <p>City: {latestAddress.city}</p>\r\n          <p>State: {latestAddress.state}</p>\r\n          <p>Zip Code: {latestAddress.zipCode}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>No address available</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-users\">\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        users.map((user) => (\r\n          <div className=\"user-card\" key={user.userId}>\r\n            <div className=\"user-info\">\r\n              <h3>User Details</h3>\r\n              <p>User ID: {user.userId}</p>\r\n              <p>Email: {user.email}</p>\r\n              <p>Name: {user.firstName} {user.lastName}</p>\r\n              <p>Phone Number: {user.phoneNumber}</p>\r\n              <p>Register Time: {user.registerTime}</p>\r\n              <p>User Account Status: {user.userAccountStatus}</p>\r\n            </div>\r\n            <div className=\"user-address\">\r\n              {getLatestAddress(user)}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminUserDetails;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AllProductAdmin.jsx",["181","182"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport \"../comp_css/AllProductAdmin.css\";\r\nimport axios from \"axios\";\r\nimport api from \"../Router/api\";\r\nimport UpdateProductForm from \"./UpdateProductForm\";\r\n\r\nconst AllProductAdmin = () => {\r\n  const { productId } = useParams();\r\n  const [products, setProducts] = useState([]);\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false); \r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const updateProduct = (productIdToUpdate) => {\r\n    const productToUpdate = products.find(\r\n      (product) => product.productId === productIdToUpdate\r\n    );\r\n    setSelectedProduct(productToUpdate);\r\n    setShowUpdateModal(true);\r\n  };\r\n\r\n  const closeUpdateModal = () => {//sending function as a props to the updateproduct form\r\n    setSelectedProduct(null);\r\n    setShowUpdateModal(false);\r\n  };\r\n  \r\n  const handleUpdate = (updatedProduct) => {//sending function as a props to the updateproduct form\r\n    api\r\n      .put(`/ecom/products/update/${updatedProduct.productId}`, updatedProduct)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(\"working.....\");\r\n        closeUpdateModal();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const deleteProduct = (productIdToDelete) => {\r\n    api\r\n      .delete(`/ecom/products/${productIdToDelete}`)\r\n      .then((response) => {\r\n        alert(response.data);\r\n\r\n        const updatedProducts = products.filter(\r\n          (product) => product.productId !== productIdToDelete\r\n        );\r\n        setProducts(updatedProducts);\r\n        setDeleted(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting product: \", error);\r\n        alert(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://127.0.0.1:8080/ecom/products/all?sort=desc\")\r\n      .then((response) => {\r\n        const sortedProducts = response.data.sort(\r\n          (a, b) => b.productId - a.productId\r\n        );\r\n        setProducts(sortedProducts);\r\n\r\n        setDeleted(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from the API: \", error);\r\n      });\r\n  }, [productId, deleted]);\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ color: \"green\", textAlign: \"center\", margin: \"5px\" }}>\r\n        ALL Live Products{\" \"}\r\n      </h1>\r\n\r\n      {showUpdateModal && (\r\n        <div className=\"update-modal\">\r\n          <UpdateProductForm product={selectedProduct} onUpdate={handleUpdate}onClose={closeUpdateModal}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n\r\n      <div className=\"product-container1\">\r\n        {products.map((product) => (\r\n          <div className=\"product-card1\" key={product.productId}>\r\n            <div className=\"product-image11\">\r\n              <img src={product.imageUrl} alt={product.name} />\r\n            </div>\r\n            <div className=\"product-info1\">\r\n              <h2>{product.name}</h2>\r\n              <p>Product ID: {product.productId}</p>\r\n              <p>Category: {product.category}</p>\r\n              <p>\r\n                Description:{\" \"}\r\n                {product.description.length > 30\r\n                  ? product.description.substring(0, 50) + \"...\"\r\n                  : product.description}\r\n              </p>\r\n\r\n              <h2 className=\"product-price1\">Price: ₹ {product.price}</h2>\r\n              <div className=\"button-container1\">\r\n                <button onClick={() => updateProduct(product.productId)}>\r\n                  update\r\n                </button>\r\n                <button onClick={() => deleteProduct(product.productId)}>\r\n                  delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div> \r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProductAdmin;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AllOrderAdmin.jsx",["183"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\"; // Import Axios\r\nimport \"../comp_css/AllOrderAdmin.css\";\r\nimport api from \"../Router/api\";\r\n\r\nconst AddOrderAdmin = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"ecom/orders/all\")\r\n      .then((response) => {\r\n        setOrders(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{textAlign:\"center\",margin:\"10px\"}}>All Orders Details</h2>\r\n      <div className=\"admin-orders\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          orders.map((order) => (\r\n            <div className=\"order-card\" key={order.orderId}>\r\n              <div className=\"orderpart\">\r\n                <h3>Order Details</h3>\r\n                <p>Order ID: {order.orderId}</p>\r\n                <p>Status: {order.status}</p>\r\n                <p>Order Date: {order.orderDate}</p>\r\n                <hr />\r\n                {order.orderItem.map((item) => (\r\n                  <div className=\"order-item\" key={item.orderItemId}>\r\n                    <p>Product: {item.product.name}</p>\r\n                    <p>Price: {item.product.price}</p>\r\n                    <p>Quantity: {item.quantity}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"customerdetails\">\r\n                <h3>Customer Details</h3>\r\n                <p>User ID: {order.user.userId}</p>\r\n                <p>\r\n                  Name: {order.user.firstName} {order.user.lastName}\r\n                </p>\r\n                <p>Phone Number: {order.user.phoneNumber}</p>\r\n\r\n                <h3>Payment Details</h3>\r\n                {order.payment ? (\r\n                  <>\r\n                    <p>Payment ID: {order.payment.paymentId}</p>\r\n                    <p>Payment Date: {order.payment.paymentDate}</p>\r\n                    <p>Payment Amount: {order.payment.paymentAmount}</p>\r\n                    <p>Payment Method: {order.payment.paymentMethod}</p>\r\n                    <p>Payment Status: {order.payment.paymentStatus}</p>\r\n                  </>\r\n                ) : (\r\n                  <p>No payment information available</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddOrderAdmin;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\AddProduct.jsx",["184","185"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport api from \"../Router/api\";\r\nimport \"../comp_css/AddProduct.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction AddProduct() {\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState({\r\n    name: \"\",\r\n    imageUrl: \"\",\r\n    description: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n    available: true,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct({ ...product, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await api.post(\"/ecom/products/add\", product);\r\n      console.log(\"Product added successfully:\", response.data);\r\n      setProduct({\r\n        name: \"\",\r\n        imageUrl: \"\",\r\n        description: \"\",\r\n        price: 0,\r\n        category: \"\",\r\n        available: true,\r\n      });\r\n      alert(\"Product Added Successfully......\");\r\n      // Redirect to the admin page after successful submission\r\n      navigate(\"/admin\");\r\n    } catch (error) {\r\n      alert(error.response.data.message);\r\n      console.error(\"Error adding product:\", error.response.data);\r\n    }\r\n  };\r\n\r\n  console.log(product);\r\n\r\n  return (\r\n    <div className=\"adminAddProduct\">\r\n      <h2 style={{ textAlign: \"center\" }}>Add Product</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"name\">Product Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={product.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Product Name\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"imageUrl\">Image URL:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"imageUrl\"\r\n            name=\"imageUrl\"\r\n            value={product.imageUrl}\r\n            onChange={handleChange}\r\n            placeholder=\"Image URL\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"description\">Description:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={product.description}\r\n            onChange={handleChange}\r\n            placeholder=\"Description\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"price\">Price:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            value={product.price}\r\n            onChange={handleChange}\r\n            placeholder=\"Price\"\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"category\">Category:</label>\r\n          <select\r\n            id=\"category\"\r\n            name=\"category\"\r\n            value={product.category}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select a category</option>\r\n            <option value=\"fruits\">Fruits</option>\r\n            <option value=\"vegetables\">Vegetables</option>\r\n            <option value=\"electronics\">Electronic</option>\r\n            <option value=\"gadgets\">Gadgets</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"submit\">Add Product</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddProduct;\r\n","C:\\Users\\rohit\\OneDrive\\Desktop\\Ecommerce\\eCommerce-Application\\frontend\\src\\components\\UpdateProductForm.jsx",[],[],{"ruleId":"186","severity":1,"message":"187","line":8,"column":7,"nodeType":"188","messageId":"189","endLine":8,"endColumn":15},{"ruleId":"186","severity":1,"message":"190","line":21,"column":17,"nodeType":"188","messageId":"189","endLine":21,"endColumn":25},{"ruleId":"186","severity":1,"message":"191","line":51,"column":9,"nodeType":"188","messageId":"189","endLine":51,"endColumn":34},{"ruleId":"192","severity":1,"message":"193","line":72,"column":6,"nodeType":"194","endLine":72,"endColumn":14,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":58,"column":9,"nodeType":"198","endLine":62,"endColumn":11},{"ruleId":"196","severity":1,"message":"197","line":69,"column":11,"nodeType":"198","endLine":69,"endColumn":49},{"ruleId":"199","severity":1,"message":"200","line":49,"column":42,"nodeType":"201","messageId":"202","endLine":49,"endColumn":44},{"ruleId":"186","severity":1,"message":"203","line":3,"column":23,"nodeType":"188","messageId":"189","endLine":3,"endColumn":36},{"ruleId":"186","severity":1,"message":"204","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":15},{"ruleId":"186","severity":1,"message":"205","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":18},{"ruleId":"192","severity":1,"message":"206","line":44,"column":6,"nodeType":"194","endLine":44,"endColumn":27,"suggestions":"207"},{"ruleId":"186","severity":1,"message":"208","line":2,"column":21,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"208","line":3,"column":23,"nodeType":"188","messageId":"189","endLine":3,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":35,"column":42,"nodeType":"201","messageId":"202","endLine":35,"endColumn":44},{"ruleId":"186","severity":1,"message":"209","line":9,"column":11,"nodeType":"188","messageId":"189","endLine":9,"endColumn":24},{"ruleId":"186","severity":1,"message":"210","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"208","line":2,"column":21,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"211","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":38},{"ruleId":"186","severity":1,"message":"210","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"210","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"208","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":14},"no-unused-vars","'passData' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'showUpdateAddAddressModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'userid'. Either exclude it or remove the dependency array. Outer scope values like 'userid' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["212"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useNavigation' is defined but never used.","'Profile' is defined but never used.","'products' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchCartData'. Either include it or remove the dependency array.",["213"],"'Link' is defined but never used.","'slideInterval' is assigned a value but never used.","'axios' is defined but never used.","'useNavigate' is defined but never used.",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: []",{"range":"218","text":"219"},"Update the dependencies array to be: [cartId, fetchCartData, totalAmount]",{"range":"220","text":"221"},[1999,2007],"[]",[1261,1282],"[cartId, fetchCartData, totalAmount]"]